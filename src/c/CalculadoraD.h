/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CALCULADORAD_H_RPCGEN
#define _CALCULADORAD_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct operadores {
	float a;
	float b;
};
typedef struct operadores operadores;

struct operadores_promedio {
	struct {
		u_int vector_len;
		float *vector_val;
	} vector;
	int tamano;
};
typedef struct operadores_promedio operadores_promedio;

struct operadores_raiz {
	float a;
};
typedef struct operadores_raiz operadores_raiz;

struct operacion {
	operadores op;
	char simbolo[3];
	float resultado;
};
typedef struct operacion operacion;

#define CALCULADORAD 0x31234567
#define CALCULADORAD_VERSION 1

#if defined(__STDC__) || defined(__cplusplus)
#define SUMA 1
extern  float * suma_1(operadores *, CLIENT *);
extern  float * suma_1_svc(operadores *, struct svc_req *);
#define RESTA 2
extern  float * resta_1(operadores *, CLIENT *);
extern  float * resta_1_svc(operadores *, struct svc_req *);
#define MULTIPLICACION 3
extern  float * multiplicacion_1(operadores *, CLIENT *);
extern  float * multiplicacion_1_svc(operadores *, struct svc_req *);
#define DIVISION 4
extern  float * division_1(operadores *, CLIENT *);
extern  float * division_1_svc(operadores *, struct svc_req *);
#define PROMEDIO 5
extern  float * promedio_1(operadores_promedio *, CLIENT *);
extern  float * promedio_1_svc(operadores_promedio *, struct svc_req *);
#define POTENCIA 6
extern  float * potencia_1(operadores *, CLIENT *);
extern  float * potencia_1_svc(operadores *, struct svc_req *);
#define RAIZ 7
extern  float * raiz_1(operadores_raiz *, CLIENT *);
extern  float * raiz_1_svc(operadores_raiz *, struct svc_req *);
extern int calculadorad_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define SUMA 1
extern  float * suma_1();
extern  float * suma_1_svc();
#define RESTA 2
extern  float * resta_1();
extern  float * resta_1_svc();
#define MULTIPLICACION 3
extern  float * multiplicacion_1();
extern  float * multiplicacion_1_svc();
#define DIVISION 4
extern  float * division_1();
extern  float * division_1_svc();
#define PROMEDIO 5
extern  float * promedio_1();
extern  float * promedio_1_svc();
#define POTENCIA 6
extern  float * potencia_1();
extern  float * potencia_1_svc();
#define RAIZ 7
extern  float * raiz_1();
extern  float * raiz_1_svc();
extern int calculadorad_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_operadores (XDR *, operadores*);
extern  bool_t xdr_operadores_promedio (XDR *, operadores_promedio*);
extern  bool_t xdr_operadores_raiz (XDR *, operadores_raiz*);
extern  bool_t xdr_operacion (XDR *, operacion*);

#else /* K&R C */
extern bool_t xdr_operadores ();
extern bool_t xdr_operadores_promedio ();
extern bool_t xdr_operadores_raiz ();
extern bool_t xdr_operacion ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_CALCULADORAD_H_RPCGEN */
